if os.path.exists(file_path):
    try:
        # Attempt to read the Excel file
        df = pd.read_excel(file_path)
        print("The path was correct. The Excel file has been successfully loaded.")
    except Exception as e:
        # If there's an error reading the file, it might not be a valid Excel file
        print(f"An error occurred while trying to read the Excel file: {e}")
else:
    # If the path does not exist, send a message to verify the path
    print("Please verify the path.")




import pandas as pd

# Load the Excel files into DataFrames
current = pd.read_excel("Current.xlsx")
industry = pd.read_excel("Industry.xlsx")

# Join the "SIC Code" column from 'current' into 'industry' based on "Customer Name"
# Assuming "Customer Name" is unique and present in both DataFrames
merged_df = industry.merge(current[['Customer Name', 'SIC Code']], on="Customer Name", how="left")

# If you want to overwrite the 'industry' DataFrame with the merged DataFrame
industry = merged_df

# If you need to save the merged DataFrame to a new Excel file
# industry.to_excel("Merged_Data.xlsx", index=False)

print(industry)









# Rename the columns in 'prev' DataFrame before merging
prev_renamed = prev.rename(columns={
    'Master Total Approved': 'Master Total Approved prev',
    '*Cat A Money': '*Cat A Money prev',
    '*Cat B Money': '*Cat B Money prev',
    '*Cat S Money': '*Cat S Money prev'
})

# Merge 'current' and 'prev_renamed' DataFrames on 'CIF Customer'
difference_df = pd.merge(current, prev_renamed[['CIF Customer', 'Master Total Approved prev', '*Cat A Money prev', '*Cat B Money prev', '*Cat S Money prev']],
                         on='CIF Customer', how='left')

# Calculate the new columns based on the difference
difference_df['New Cat A Money'] = difference_df['*Cat A Money'] - difference_df['*Cat A Money prev']
difference_df['New Cat B Money'] = difference_df['*Cat B Money'] - difference_df['*Cat B Money prev']
difference_df['New Cat S Money'] = difference_df['*Cat S Money'] - difference_df['*Cat S Money prev']
difference_df['Total New Money'] = difference_df['Master Total Approved'] - difference_df['Master Total Approved prev']



·············

industry_mapping = pd.read_excel('Industry Mapping.xlsx', engine='openpyxl')

# Convert the "Date" column to the desired format and create 'current2' DataFrame
current['Date'] = pd.to_datetime(current['Date'], format='%m/%d/%Y').dt.strftime('b-%y')
current2 = current[['Date']].copy()

# Rename and select columns as per your requirements
current2['Business'] = current['FCL FTP Functional Hierarchy Lvl 05 Desc']
current2['Customer Name'] = current['Customer Name']
current2['CIF Customer Id'] = current['CIF Customer Id']
current2['SIC Code'] = current['SIC Code 1']

# Join the "Industry" column from "industry_mapping" based on "SIC Code 1"
current2 = pd.merge(current2, industry_mapping[['SIC Code 1', 'Industry']], left_on='SIC Code', right_on='SIC Code 1', how='left').drop(columns=['SIC Code 1'])

# Continue with the rest of the columns
current2['Final Customer Risk Grade'] = current['Final Customer Risk Grade']

# Merge with 'difference_df' to bring in the new money columns based on "CIF Customer Id"
difference_df_subset = difference_df[['CIF Customer Id', 'New Cat A Money', 'New Cat B Money', 'New Cat S Money', 'Total New Money']]
current2 = pd.merge(current2, difference_df_subset, on='CIF Customer Id', how='left')










# Define the columns to sum
sum_columns = ['Cat A money', 'Cat B money', 'Cat S money', 'Master Total Approved']

# Get all column names
all_columns = current.columns.tolist()

# Columns to take the first value
first_value_columns = [col for col in all_columns if col not in sum_columns and col != 'CIF Customer Id']

# Define the aggregation dictionary
aggregation_dict = {col: 'first' for col in first_value_columns}
aggregation_dict.update({col: 'sum' for col in sum_columns})

# Group by 'CIF Customer Id' and aggregate
result_df = current.groupby('CIF Customer Id', as_index=False).agg(aggregation_dict)

# result_df will have the aggregated results





import pandas as pd

# Assuming you have the 'industry_mapping' DataFrame
industry_mapping['SIC Code 1'] = industry_mapping['SIC Code 1'].str.replace(r'\.0$', '')

# This will remove any trailing ".0" from the strings in the column




# Sorting the DataFrame by the 'Total New Money' column in descending order.
sorted_df = difference_df.sort_values(by='Total New Money', ascending=False)

# Keeping only the records where 'Total New Money' is greater than 10 million.
filtered_df = sorted_df[sorted_df['Total New Money'] > 10000000]

# You can then view the filtered DataFrame
filtered_df.head()
