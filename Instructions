5. Save the New DataFrame to a CSV File ---
        # The filename will be dynamically generated from the first entry in the 'As of Date' column.
        try:
            output_path = "filtered_customer_data.csv" # Default fallback name
            
            # Check if 'As of Date' column exists in the original DataFrame and is not empty
            if 'As of Date' in original_df.columns and not original_df['As of Date'].dropna().empty:
                # Get the very first non-NA value from the column
                first_date_str = original_df['As of Date'].dropna().iloc[0]
                
                # Try to parse the date string. The format '%d-%b-%y' matches '30-Apr-24'.
                try:
                    date_for_filename = pd.to_datetime(first_date_str, format='%d-%b-%y')
                    # Format the date as "Month Year", e.g., "April 2024"
                    filename_prefix = date_for_filename.strftime('%B %Y')
                    output_path = f"{filename_prefix}.csv"
                    print(f"\nüíæ Dynamically named file based on the first 'As of Date' value: '{first_date_str}'")
                except (ValueError, TypeError):
                     print(f"\n‚ö†Ô∏è Could not parse the first date value: '{first_date_str}'. It may not be in 'dd-Mon-yy' format. Using default filename.")
            else:
                 print("\n‚ö†Ô∏è 'As of Date' column not found or is empty. Using default filename.")

            print(f"Saving the new DataFrame to '{output_path}'...")

            # Save the DataFrame to a CSV file.
            # `index=False` prevents pandas from writing the DataFrame index as a column.
            filtered_df.to_csv(output_path, index=False)

            print(f"üéâ Success! The file has been saved to your current directory.")
            print(f"Path: {output_path}")

        except Exception as e:
            print(f"‚ùå An error occurred during file saving: {e}")


    except KeyError as e:
        print(f"‚ùå Error: One of the specified columns was not found in the Excel file: {e}")
        print("Please verify the column names and try again.")
    except Exception as e:
        print(f"‚ùå An unexpected error occurred during processing: {e}")

